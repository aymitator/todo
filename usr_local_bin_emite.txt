#!/usr/bin/perl
#usr_local_bin_emite.sstring
#STRING EDITOR
#UNLICENSE LICENSE
#MADE BY szstr in 160 minutes
=pod
Aynstance run:
> edit #clears LOG.log
add\
use v5.36.0;
add\
say "HELLO WORL";

> perl LOG.log #use edit -a to add to LOG.log
> edit -a
add\
say "BYE WORL";

> perl LOG.log #use edit -a --undo to get rid a' last line
> edit -a --undo
add\
say "ACTUALLY HELL OH WOR, GEN";

> echo ":)"

=cut
use v5.36.0;
use re "/aa";
no feature "unicode_strings";

our @lines = ();
our $CMD = "";

while (1) {
  $CMD = <STDIN>;
  chomp($CMD);
  if($CMD eq "add\\") {
    $lines[@lines] = <STDIN>;
    chomp($lines[@lines-1]);
    next;
  }
  last;
}

my ${HAN};
if(@ARGV > 0 && $ARGV[0] eq "-a") {
  if(@ARGV > 1 && $ARGV[1] eq "--undo") {
    open(${HAN}, "<", "LOG.log") or exit 0;
    my $CON = "";
    {
      local $/;
      $CON = <$HAN>;
    }
    close(${HAN});
    undef ${HAN};
    my @linesii = split /\n/, $CON;  #REM: @linesii is what was
    undef $CON;
    if($linesii[$#linesii] eq "") {
      pop(@linesii);
    }
    pop(@linesii);
    @lines = (@linesii, @lines);
    @linesii = ();
    open(${HAN}, ">", "LOG.log") or exit 0;
  } else {
    open(${HAN}, ">>", "LOG.log") or exit 0;
  }
} else {
  open(${HAN}, ">", "LOG.log") or exit 0;
}
foreach(@lines){
  say ${HAN} $_;
}
close(${HAN});
undef $HAN;
exit 0;
